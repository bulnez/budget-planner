{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Budget planner\\\\budget-planner\\\\src\\\\components\\\\Pages\\\\Add Expense\\\\Add.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Navigation from \"../../Navigation/Navigation\";\nimport Classes from \"../Add Expense/Add.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddExpense = () => {\n  _s();\n\n  let history = useHistory();\n  let token = JSON.parse(localStorage.userDetails).token;\n  let url = window.location.href;\n  const month = url.charAt(url.length - 1);\n\n  const errorNotification = errorMsg => NotificationManager.error(errorMsg, \"Click me!\", 4000, () => {\n    alert(\"callback\");\n  });\n\n  const successNotification = successMsg => NotificationManager.success(successMsg, \"Click me!\", 4000, () => {\n    alert(\"callback\");\n  });\n\n  const [details, setDetails] = useState({\n    date: 0,\n    name: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  const postExpense = e => {\n    e.preventDefault();\n    Object.keys(details).forEach(e => {\n      if (isNaN(details[e]) === false) {\n        details[e] = parseInt(details[e]);\n      }\n    });\n    fetch(`http://localhost:5000/plan/2017/${month}/expense`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `bearer ${token}`\n      },\n      body: JSON.stringify(details)\n    }).then(response => response.json()).then(responseData => {\n      if (responseData.success) {\n        successNotification(responseData.message);\n        setTimeout(() => {\n          history.push(\"/monthly/1\");\n        }, 2000);\n      } else {\n        errorNotification(responseData.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: postExpense,\n          className: \"add-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add a new expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            onChange: e => setDetails({ ...details,\n              name: e.target.value\n            }),\n            value: details.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setDetails({ ...details,\n              category: e.target.value\n            }),\n            value: details.category,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Food and groceries\",\n              children: \"Food and groceries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Apartment\",\n              children: \"Apartment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Car\",\n              children: \"Car\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Travelling\",\n              children: \"Travelling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Fashion\",\n              children: \"Fashion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            type: true,\n            children: \"Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"cost\",\n            type: \"number\",\n            onChange: e => setDetails({ ...details,\n              amount: e.target.value\n            }),\n            value: details.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Payment date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"01\",\n            max: \"31\",\n            onChange: e => setDetails({ ...details,\n              date: e.target.value\n            }),\n            value: details.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddExpense, \"ZIA7YktwDfb1RunTJv9tuKuUz4M=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddExpense;\nexport default AddExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExpense\");","map":{"version":3,"sources":["C:/Projects/Budget planner/budget-planner/src/components/Pages/Add Expense/Add.js"],"names":["React","useEffect","useState","Navigation","Classes","NotificationContainer","NotificationManager","useHistory","AddExpense","history","token","JSON","parse","localStorage","userDetails","url","window","location","href","month","charAt","length","errorNotification","errorMsg","error","alert","successNotification","successMsg","success","details","setDetails","date","name","category","amount","postExpense","e","preventDefault","Object","keys","forEach","isNaN","parseInt","fetch","method","headers","Authorization","body","stringify","then","response","json","responseData","message","setTimeout","push","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navigation from \"../../Navigation/Navigation\";\r\nimport Classes from \"../Add Expense/Add.css\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddExpense = () => {\r\n  let history = useHistory();\r\n\r\n  let token = JSON.parse(localStorage.userDetails).token;\r\n  let url = window.location.href;\r\n  const month = url.charAt(url.length - 1);\r\n\r\n  const errorNotification = (errorMsg) =>\r\n    NotificationManager.error(errorMsg, \"Click me!\", 4000, () => {\r\n      alert(\"callback\");\r\n    });\r\n  const successNotification = (successMsg) =>\r\n    NotificationManager.success(successMsg, \"Click me!\", 4000, () => {\r\n      alert(\"callback\");\r\n    });\r\n\r\n  const [details, setDetails] = useState({\r\n    date: 0,\r\n    name: \"\",\r\n    category: \"\",\r\n    amount: 0,\r\n  });\r\n\r\n  const postExpense = (e) => {\r\n    e.preventDefault();\r\n\r\n    Object.keys(details).forEach((e) => {\r\n      if (isNaN(details[e]) === false) {\r\n        details[e] = parseInt(details[e]);\r\n      }\r\n    });\r\n\r\n    fetch(`http://localhost:5000/plan/2017/${month}/expense`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(details),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        if (responseData.success) {\r\n          successNotification(responseData.message);\r\n          setTimeout(() => {\r\n            history.push(\"/monthly/1\");\r\n          }, 2000);\r\n        } else {\r\n          errorNotification(responseData.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n      <div className=\"container\">\r\n        <h1>Add Expenses</h1>\r\n        <div className=\"add-container\">\r\n          <form onSubmit={postExpense} className=\"add-form\">\r\n            <h3>Add a new expense</h3>\r\n            <label>Name:</label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              onChange={(e) => setDetails({ ...details, name: e.target.value })}\r\n              value={details.name}\r\n            />\r\n            <br />\r\n            <label>Category:</label>\r\n            <select\r\n              onChange={(e) =>\r\n                setDetails({ ...details, category: e.target.value })\r\n              }\r\n              value={details.category}\r\n            >\r\n              <option value=\"Food and groceries\">Food and groceries</option>\r\n              <option value=\"Apartment\">Apartment</option>\r\n              <option value=\"Car\">Car</option>\r\n              <option value=\"Travelling\">Travelling</option>\r\n              <option value=\"Fashion\">Fashion</option>\r\n            </select>\r\n            <br />\r\n            <label type>Cost:</label>\r\n            <input\r\n              id=\"cost\"\r\n              type=\"number\"\r\n              onChange={(e) =>\r\n                setDetails({ ...details, amount: e.target.value })\r\n              }\r\n              value={details.amount}\r\n            />\r\n            <br />\r\n            <label>Payment date:</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"01\"\r\n              max=\"31\"\r\n              onChange={(e) => setDetails({ ...details, date: e.target.value })}\r\n              value={details.date}\r\n            />\r\n            <br />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <NotificationContainer></NotificationContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddExpense;\r\n"]},"metadata":{},"sourceType":"module"}