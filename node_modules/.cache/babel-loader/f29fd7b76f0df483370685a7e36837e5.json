{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Budget planner\\\\budget-planner\\\\src\\\\components\\\\Pages\\\\Add Expense\\\\Add.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navigation from \"../../Navigation/Navigation\";\nimport Classes from \"../Add Expense/Add.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddExpense = () => {\n  _s();\n\n  let token = JSON.parse(localStorage.userDetails).token;\n  let url = window.location.href;\n  const month = url.charAt(url.length - 1);\n\n  const createNotification = type => {\n    return () => {\n      switch (type) {\n        case \"info\":\n          NotificationManager.info(\"Info message\");\n          break;\n\n        case \"success\":\n          NotificationManager.success(\"Success message\", \"You successfully added a new expense.\");\n          break;\n\n        case \"warning\":\n          NotificationManager.warning(\"Warning message\", \"Close after 3000ms\", 3000);\n          break;\n\n        case \"error\":\n          NotificationManager.error(\"Error message\", \"Click me!\", 5000, () => {\n            alert(\"callback\");\n          });\n          break;\n      }\n    };\n  };\n\n  const [details, setDetails] = useState({\n    date: 0,\n    name: \"\",\n    category: \"\",\n    amount: 0\n  });\n\n  const postExpense = e => {\n    e.preventDefault();\n    Object.keys(details).forEach(e => {\n      if (isNaN(details[e]) === false) {\n        details[e] = parseInt(details[e]);\n      }\n    });\n    console.log(details);\n    fetch(`http://localhost:5000/plan/2017/${month}/expense`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `bearer ${token}`\n      },\n      body: JSON.stringify(details)\n    }).then(response => response.json()).then(responseData => {\n      console.log(responseData);\n      createNotification(\"success\");\n    }).catch(error => console.log(error.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: postExpense,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a new expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        onChange: e => setDetails({ ...details,\n          name: e.target.value\n        }),\n        value: details.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setDetails({ ...details,\n          category: e.target.value\n        }),\n        value: details.category,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Non-essential\",\n          children: \"Non-essential\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Fixed\",\n          children: \"Fixed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Variable\",\n          children: \"Variable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        type: true,\n        children: \"Cost:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"cost\",\n        type: \"number\",\n        onChange: e => setDetails({ ...details,\n          amount: e.target.value\n        }),\n        value: details.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Payment date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"01\",\n        max: \"31\",\n        onChange: e => setDetails({ ...details,\n          date: e.target.value\n        }),\n        value: details.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNotification(\"success\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddExpense, \"mvwqBbDDmdTAK7jg+1X/6N2kQKs=\");\n\n_c = AddExpense;\nexport default AddExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExpense\");","map":{"version":3,"sources":["C:/Projects/Budget planner/budget-planner/src/components/Pages/Add Expense/Add.js"],"names":["React","useState","Navigation","Classes","NotificationContainer","NotificationManager","AddExpense","token","JSON","parse","localStorage","userDetails","url","window","location","href","month","charAt","length","createNotification","type","info","success","warning","error","alert","details","setDetails","date","name","category","amount","postExpense","e","preventDefault","Object","keys","forEach","isNaN","parseInt","console","log","fetch","method","headers","Authorization","body","stringify","then","response","json","responseData","catch","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navigation from \"../../Navigation/Navigation\";\r\nimport Classes from \"../Add Expense/Add.css\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\n\r\nconst AddExpense = () => {\r\n  let token = JSON.parse(localStorage.userDetails).token;\r\n  let url = window.location.href;\r\n  const month = url.charAt(url.length - 1);\r\n\r\n  const createNotification = (type) => {\r\n    return () => {\r\n      switch (type) {\r\n        case \"info\":\r\n          NotificationManager.info(\"Info message\");\r\n          break;\r\n        case \"success\":\r\n          NotificationManager.success(\r\n            \"Success message\",\r\n            \"You successfully added a new expense.\"\r\n          );\r\n          break;\r\n        case \"warning\":\r\n          NotificationManager.warning(\r\n            \"Warning message\",\r\n            \"Close after 3000ms\",\r\n            3000\r\n          );\r\n          break;\r\n        case \"error\":\r\n          NotificationManager.error(\"Error message\", \"Click me!\", 5000, () => {\r\n            alert(\"callback\");\r\n          });\r\n          break;\r\n      }\r\n    };\r\n  };\r\n\r\n  const [details, setDetails] = useState({\r\n    date: 0,\r\n    name: \"\",\r\n    category: \"\",\r\n    amount: 0,\r\n  });\r\n\r\n  const postExpense = (e) => {\r\n    e.preventDefault();\r\n\r\n    Object.keys(details).forEach((e) => {\r\n      if (isNaN(details[e]) === false) {\r\n        details[e] = parseInt(details[e]);\r\n      }\r\n    });\r\n\r\n    console.log(details);\r\n    fetch(`http://localhost:5000/plan/2017/${month}/expense`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(details),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n        createNotification(\"success\");\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n      <h1>Add Expenses</h1>\r\n      <form onSubmit={postExpense}>\r\n        <h3>Add a new expense</h3>\r\n        <label>Name:</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          onChange={(e) => setDetails({ ...details, name: e.target.value })}\r\n          value={details.name}\r\n        />\r\n        <br />\r\n        <label>Category:</label>\r\n        <select\r\n          onChange={(e) => setDetails({ ...details, category: e.target.value })}\r\n          value={details.category}\r\n        >\r\n          <option value=\"Non-essential\">Non-essential</option>\r\n          <option value=\"Fixed\">Fixed</option>\r\n          <option value=\"Variable\">Variable</option>\r\n        </select>\r\n        <br />\r\n        <label type>Cost:</label>\r\n        <input\r\n          id=\"cost\"\r\n          type=\"number\"\r\n          onChange={(e) => setDetails({ ...details, amount: e.target.value })}\r\n          value={details.amount}\r\n        />\r\n        <br />\r\n        <label>Payment date:</label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"01\"\r\n          max=\"31\"\r\n          onChange={(e) => setDetails({ ...details, date: e.target.value })}\r\n          value={details.date}\r\n        />\r\n        <br />\r\n        <button type=\"submit\">Submit</button>\r\n        <button onClick={createNotification(\"success\")}></button>\r\n      </form>\r\n      <NotificationContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddExpense;\r\n"]},"metadata":{},"sourceType":"module"}