{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Budget planner\\\\budget-planner\\\\src\\\\components\\\\Pages\\\\Registration\\\\Registration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navigation from \"../../Navigation/Navigation\";\nimport classes from \"../Registration/Registration.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n\n  const errorNotification = errorMsg => NotificationManager.error(errorMsg, \"Click to hide\", 4000, () => {\n    alert(\"callback\");\n  });\n\n  const successNotification = successMsg => NotificationManager.success(successMsg, \"Click to hide\", 4000, () => {\n    alert(\"callback\");\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const postRequest = {\n      name,\n      email,\n      password\n    };\n    fetch(\"http://localhost:5000/auth/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postRequest)\n    }).then(response => response.json()).then(responseData => {\n      if (responseData.success) {\n        successNotification(responseData.message);\n        setTimeout(() => {\n          history.push(\"/login\");\n        }, 5000);\n      } else {\n        errorNotification(responseData.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-reg-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reg-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"reg-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"form-control-label\",\n            for: \"new-email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"form-control-label\",\n            for: \"new-password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"XQ9HLrP0Uhr6Vw/pnFVaMLw5ZvE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/Projects/Budget planner/budget-planner/src/components/Pages/Registration/Registration.js"],"names":["React","useState","Navigation","classes","NotificationContainer","NotificationManager","useHistory","Registration","name","setName","email","setEmail","password","setPassword","history","errorNotification","errorMsg","error","alert","successNotification","successMsg","success","handleSubmit","e","preventDefault","postRequest","fetch","method","headers","body","JSON","stringify","then","response","json","responseData","message","setTimeout","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navigation from \"../../Navigation/Navigation\";\r\nimport classes from \"../Registration/Registration.css\";\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Registration = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const errorNotification = (errorMsg) =>\r\n    NotificationManager.error(errorMsg, \"Click to hide\", 4000, () => {\r\n      alert(\"callback\");\r\n    });\r\n\r\n  const successNotification = (successMsg) =>\r\n    NotificationManager.success(successMsg, \"Click to hide\", 4000, () => {\r\n      alert(\"callback\");\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const postRequest = { name, email, password };\r\n\r\n    fetch(\"http://localhost:5000/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(postRequest),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        if (responseData.success) {\r\n          successNotification(responseData.message);\r\n          setTimeout(() => {\r\n            history.push(\"/login\");\r\n          }, 5000);\r\n        } else {\r\n          errorNotification(responseData.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation></Navigation>\r\n      <div className=\"main-reg-container\">\r\n        <h1>Registration</h1>\r\n        <div className=\"reg-container\">\r\n          <form className=\"reg-form\" onSubmit={handleSubmit}>\r\n            <label>Username</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />{\" \"}\r\n            <br />\r\n            <label class=\"form-control-label\" for=\"new-email\">\r\n              E-mail\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />{\" \"}\r\n            <br />\r\n            <label class=\"form-control-label\" for=\"new-password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />{\" \"}\r\n            <br />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <NotificationContainer></NotificationContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"]},"metadata":{},"sourceType":"module"}