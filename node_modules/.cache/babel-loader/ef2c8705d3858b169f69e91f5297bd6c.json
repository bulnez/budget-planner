{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Budget planner\\\\budget-planner\\\\src\\\\components\\\\Pages\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navigation from \"../../Navigation/Navigation\";\nimport Classes from \"../Login/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [details, setDetails] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const postRequest = details;\n    fetch('http://localhost:5000/auth/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postRequest)\n    }).then(response => response.json()).then(responseData => {\n      if (responseData.success === true) {\n        return responseData;\n      } else {\n        setError(responseData.message);\n        return responseData;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), error != \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        onChange: e => setDetails({ ...details,\n          email: e.target.value\n        }),\n        value: details.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 138\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        onChange: e => setDetails({ ...details,\n          password: e.target.value\n        }),\n        value: details.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 150\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"uhXyCGdvwmG20iQ3bTGoPaB1ZHQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Projects/Budget planner/budget-planner/src/components/Pages/Login/Login.js"],"names":["React","useState","Navigation","Classes","Login","details","setDetails","email","password","error","setError","handleSubmit","e","preventDefault","postRequest","fetch","method","headers","body","JSON","stringify","then","response","json","responseData","success","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC;AAAEM,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAtC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,WAAW,GAAGT,OAApB;AAEAU,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF6B;AAGtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AAHgC,KAArC,CAAL,CAIGO,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKKF,IALL,CAKWG,YAAD,IAAkB;AACpB,UAAIA,YAAY,CAACC,OAAb,KAAyB,IAA7B,EAAmC;AAC/B,eAAOD,YAAP;AACH,OAFD,MAEO;AACHd,QAAAA,QAAQ,CAACc,YAAY,CAACE,OAAd,CAAR;AACA,eAAOF,YAAP;AACH;AACJ,KAZL;AAcH,GAnBD;;AAqBA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGMf,KAAK,IAAI,EAAV,gBAAiB;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAjB,GAAuC,EAH5C,eAII;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,IAAI,EAAC,MAAvB;AAA8B,QAAA,QAAQ,EAAEC,CAAC,IAAIN,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcE,UAAAA,KAAK,EAAEK,CAAC,CAACe,MAAF,CAASC;AAA9B,SAAD,CAAvD;AAAgG,QAAA,KAAK,EAAEvB,OAAO,CAACE;AAA/G;AAAA;AAAA;AAAA;AAAA,cAFJ,oBAE6H;AAAA;AAAA;AAAA;AAAA,cAF7H,eAGI;AAAO,QAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,EAAE,EAAC,UAAV;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAqC,QAAA,QAAQ,EAAEK,CAAC,IAAIN,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcG,UAAAA,QAAQ,EAAEI,CAAC,CAACe,MAAF,CAASC;AAAjC,SAAD,CAA9D;AAA0G,QAAA,KAAK,EAAEvB,OAAO,CAACG;AAAzH;AAAA;AAAA;AAAA;AAAA,cAJJ,eAIyI;AAAA;AAAA;AAAA;AAAA,cAJzI,eAKI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAzCD;;GAAMJ,K;;KAAAA,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Navigation from \"../../Navigation/Navigation\";\r\nimport Classes from \"../Login/Login.css\"\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [details, setDetails] = useState({ email: \"\", password: \"\" });\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const postRequest = details;\r\n\r\n        fetch('http://localhost:5000/auth/login', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(postRequest)\r\n        }).then((response) => response.json())\r\n            .then((responseData) => {\r\n                if (responseData.success === true) {\r\n                    return responseData;\r\n                } else {\r\n                    setError(responseData.message);\r\n                    return responseData;\r\n                }\r\n            }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navigation></Navigation>\r\n            <h1>Login</h1>\r\n            {(error != \"\") ? (<div>{error}</div>) : \"\"}\r\n            <form onSubmit={handleSubmit}>\r\n                <label for=\"email\">E-mail</label>\r\n                <input id=\"email\" type=\"text\" onChange={e => setDetails({ ...details, email: e.target.value })} value={details.email} /> <br />\r\n                <label for=\"password\">Password</label>\r\n                <input id=\"password\" type=\"password\" onChange={e => setDetails({ ...details, password: e.target.value })} value={details.password} /><br />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}