[{"C:\\Projects\\budget_planner_project\\budget-planner\\src\\index.js":"1","C:\\Projects\\budget_planner_project\\budget-planner\\src\\App.js":"2","C:\\Projects\\budget_planner_project\\budget-planner\\src\\reportWebVitals.js":"3","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\Navigation.js":"4","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Monthly\\Monthly.js":"5","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Add Expense\\Add.js":"6","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Login\\Login.js":"7","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Registration\\Registration.js":"8","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Yearly\\Yearly.jsx":"9","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Table\\Items.js":"10","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Card\\Card.js":"11","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Monthly\\Plan.js":"12","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Dashboard\\Dashboard.js":"13","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Savings.js":"14","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Common\\Common.js":"15","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\Logged.js":"16","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\NotLogged.js":"17","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Picker\\Picker.js":"18","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Popup.js":"19","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\PopupLogout.js":"20","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Monthly\\NoData.js":"21"},{"size":618,"mtime":1634647990599,"results":"22","hashOfConfig":"23"},{"size":1362,"mtime":1638267385283,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":257,"mtime":1637838213290,"results":"26","hashOfConfig":"23"},{"size":4990,"mtime":1638270501990,"results":"27","hashOfConfig":"23"},{"size":3679,"mtime":1638271830373,"results":"28","hashOfConfig":"23"},{"size":2221,"mtime":1637676921182,"results":"29","hashOfConfig":"23"},{"size":2086,"mtime":1637677736203,"results":"30","hashOfConfig":"23"},{"size":2205,"mtime":1638273427796,"results":"31","hashOfConfig":"23"},{"size":480,"mtime":1637829146472,"results":"32","hashOfConfig":"23"},{"size":832,"mtime":1638272235532,"results":"33","hashOfConfig":"23"},{"size":3868,"mtime":1638267696586,"results":"34","hashOfConfig":"23"},{"size":3788,"mtime":1637569888662,"results":"35","hashOfConfig":"23"},{"size":3021,"mtime":1637225846003,"results":"36","hashOfConfig":"23"},{"size":949,"mtime":1638195984767,"results":"37","hashOfConfig":"23"},{"size":1448,"mtime":1638267763288,"results":"38","hashOfConfig":"23"},{"size":495,"mtime":1637156027566,"results":"39","hashOfConfig":"23"},{"size":1905,"mtime":1638271531204,"results":"40","hashOfConfig":"23"},{"size":700,"mtime":1637838150318,"results":"41","hashOfConfig":"23"},{"size":789,"mtime":1637838190751,"results":"42","hashOfConfig":"23"},{"size":1326,"mtime":1638274141327,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1li2gn",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\budget_planner_project\\budget-planner\\src\\index.js",["96","97","98"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["99","100"],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\App.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\reportWebVitals.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\Navigation.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Monthly\\Monthly.js",["101","102","103"],"import React, { useState, useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport Popup from \"../../UI/Popup\";\r\nimport styles from \"../../Styles/Monthly.module.css\";\r\nimport Plan from \"./Plan\";\r\nimport Item from \"../../UI/Table/Items\";\r\nimport { errorNotification, successNotification } from \"../../Common/Common\";\r\nimport Picker from \"../../UI/Picker/Picker\";\r\n\r\nconst Monthly = () => {\r\n  const [sort, setSort] = useState(false);\r\n  const [data, setData] = useState({ budget: 0, balance: 0, expenses: [] });\r\n  const [open, setOpen] = useState(false);\r\n  const [popup, setPopup] = useState({ open: false, id: \"\" });\r\n  const { month } = useParams();\r\n  const { currYear } = useParams();\r\n  const token = JSON.parse(localStorage.userDetails).token;\r\n\r\n  //Set total\r\n  const total = useMemo(() => {\r\n    if (data.expenses.length > 0) {\r\n      const totalExpenses = data.expenses.reduce((acc, expense) => {\r\n        return acc + expense.amount;\r\n      }, 0);\r\n      return totalExpenses;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }, [data]);\r\n\r\n  //Set balance\r\n  const balance = useMemo(() => {\r\n    return data.budget - total;\r\n  }, [data]);\r\n\r\n  //Delete item\r\n  const deleteItem = (id) => {\r\n    fetch(`http://localhost:5000/plan/expense/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        if (responseData.success) {\r\n          successNotification(responseData.message);\r\n          data.expenses.filter(() => {\r\n            const arr = data.expenses.filter(\r\n              (expense) => expense.id !== responseData.expense\r\n            );\r\n            setData({ ...data, expenses: arr });\r\n          });\r\n        } else {\r\n          errorNotification(responseData.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  //Sort by amount\r\n  const sortExpenses = () => {\r\n    const sortedExpenses = [...data.expenses].sort((a, b) => {\r\n      if (sort) {\r\n        return a.amount - b.amount;\r\n      } else {\r\n        return b.amount - a.amount;\r\n      }\r\n    });\r\n    setData({ ...data, expenses: sortedExpenses });\r\n    setSort(!sort);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.heading}>Monthly balance</h1>\r\n      <div className={styles.innerBody}>\r\n        <Plan\r\n          month={month}\r\n          setData={setData}\r\n          balance={balance}\r\n          month={parseInt(month)}\r\n          year={parseInt(currYear)}\r\n          disabled={false}\r\n        />\r\n        <div className={styles.expensesCard}>\r\n          <Picker month={month} setOpen={setOpen} open={open} year={currYear} />\r\n          <div className={`${styles.row} ${open ? styles.blur : \"\"}`}>\r\n            <h2>Expenses</h2>\r\n            <div\r\n              onClick={() => {\r\n                if (data.budget === 0)\r\n                  return errorNotification(\r\n                    \"You have to add income and budget first\"\r\n                  );\r\n              }}\r\n            >\r\n              <Link\r\n                className={`${styles.addExpense} ${\r\n                  data.budget === 0 ? \"\" : styles.active\r\n                }`}\r\n                to={{\r\n                  pathname: `/addexpense/${month}`,\r\n                }}\r\n              >\r\n                Add expense\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          {data.expenses.length > 0 ? (\r\n            <table\r\n              className={`${styles.tableExpenses} ${open ? styles.blur : \"\"}`}\r\n            >\r\n              <thead>\r\n                <th>Name</th>\r\n                <th>Payment date</th>\r\n                <th>Category</th>\r\n                <th className={styles.thFilter} onClick={sortExpenses}>\r\n                  Cost\r\n                  {sort ? <p>▲</p> : <p>▼</p>}\r\n                </th>\r\n                <th></th>\r\n              </thead>\r\n              <tbody className={styles.expensesBody}>\r\n                {data.expenses.map((el) => (\r\n                  <Item\r\n                    name={el.name}\r\n                    category={el.category}\r\n                    amount={el.amount}\r\n                    date={el.month + \".\" + month + \".2021\"}\r\n                    id={el.id}\r\n                    setPopup={() => setPopup({ open: true, id: el.id })}\r\n                  />\r\n                ))}\r\n                <th></th>\r\n                <th></th>\r\n                <th>Total spent:</th>\r\n                <th>{total}</th>\r\n                <th></th>\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p className={styles.empty}>You still don't have any expenses</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Popup\r\n        message={\"Are you sure you want to delete this expense?\"}\r\n        popup={popup}\r\n        setPopup={setPopup}\r\n        deleteItem={deleteItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Monthly;\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Add Expense\\Add.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Login\\Login.js",["104"],"import React, { useState } from \"react\";\r\nimport Navigation from \"../../Navigation/Navigation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { errorNotification, successNotification } from \"../../Common/Common\";\r\nimport styles from \"../../Styles/Login.module.css\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [details, setDetails] = useState({ email: \"\", password: \"\" });\r\n\r\n  const saveToken = (tokenDetails) => {\r\n    localStorage.setItem(\r\n      \"userDetails\",\r\n      JSON.stringify({\r\n        token: tokenDetails.token,\r\n        user: tokenDetails.user.name,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://localhost:5000/auth/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(details),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        if (responseData.success) {\r\n          saveToken(responseData);\r\n          successNotification(responseData.message);\r\n          setTimeout(() => {\r\n            history.push(\"/dashboard\");\r\n            window.location.reload(false);\r\n          }, 2100);\r\n        } else {\r\n          errorNotification(responseData.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <h1>Login</h1>\r\n      <div className={styles.loginContainer}>\r\n        <form className={styles.loginForm} onSubmit={handleSubmit}>\r\n          <label>E-mail</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            onChange={(e) => setDetails({ ...details, email: e.target.value })}\r\n            value={details.email}\r\n            required\r\n          />{\" \"}\r\n          <br />\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            onChange={(e) =>\r\n              setDetails({ ...details, password: e.target.value })\r\n            }\r\n            value={details.password}\r\n            required\r\n          />\r\n          <br />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Registration\\Registration.js",["105"],"import React, { useState } from \"react\";\r\nimport Navigation from \"../../Navigation/Navigation\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { errorNotification, successNotification } from \"../../Common/Common\";\r\nimport styles from \"../../Styles/Register.module.css\";\r\n\r\nconst Registration = () => {\r\n  const history = useHistory();\r\n  const [details, setDetails] = useState({ name: \"\", email: \"\", password: \"\" });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"http://localhost:5000/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(details),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        if (responseData.success) {\r\n          successNotification(responseData.message);\r\n          setTimeout(() => {\r\n            history.push(\"/login\");\r\n          }, 3100);\r\n        } else {\r\n          errorNotification(responseData.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <h1>Registration</h1>\r\n      <div className={styles.regContainer}>\r\n        <form className={styles.regForm} onSubmit={handleSubmit}>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={details.name}\r\n            onChange={(e) => setDetails({ ...details, name: e.target.value })}\r\n            required\r\n          />{\" \"}\r\n          <label>E-mail</label>\r\n          <input\r\n            type=\"email\"\r\n            value={details.email}\r\n            onChange={(e) => setDetails({ ...details, email: e.target.value })}\r\n            required\r\n          />{\" \"}\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={details.password}\r\n            onChange={(e) =>\r\n              setDetails({ ...details, password: e.target.value })\r\n            }\r\n            required\r\n          />{\" \"}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Yearly\\Yearly.jsx",["106"],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Table\\Items.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Card\\Card.js",["107","108","109"],"import React from \"react\";\r\nimport styles from \"../../Styles/Card.module.css\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <h1>{props.month}</h1>\r\n      <h3>{props.year}</h3>\r\n      <label>Budget:</label>\r\n      <input name=\"budget\" placeholder={props.budget} disabled></input>\r\n      <label>Expenses:</label>\r\n      <input name=\"expenses\" placeholder={props.expenses} disabled></input>\r\n      <label>Balance:</label>\r\n      <input name=\"balance\" placeholder={props.balance} disabled></input>\r\n\r\n      <Link\r\n        to={{\r\n          pathname: `/2021/monthly/${props.id}`,\r\n        }}\r\n        className={styles.linkBtn}\r\n      >\r\n        Details\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Monthly\\Plan.js",["110","111"],"import React, { useEffect, useState } from \"react\";\r\nimport { errorNotification, successNotification } from \"../../Common/Common\";\r\nimport styles from \"../../Styles/Plan.module.css\";\r\n\r\nconst Plan = ({ setData, balance, month, year, disabled }) => {\r\n  const [money, setMoney] = useState({ budget: 0, income: 0 });\r\n  const [edit, setEdit] = useState(false);\r\n  const token = JSON.parse(localStorage.userDetails).token;\r\n\r\n  //Getting the current income and budget data MOVE IT TO MONTHLY\r\n  useEffect(() => {\r\n    if (year === 2021) {\r\n      fetch(`http://localhost:5000/plan/2021/${month}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `bearer ${token}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          setMoney({\r\n            budget: responseData.budget,\r\n            income: responseData.income,\r\n          });\r\n          setData({\r\n            budget: responseData.budget,\r\n            income: responseData.income,\r\n            expenses: responseData.expenses,\r\n          });\r\n        });\r\n    }\r\n  }, [edit, token, month]);\r\n\r\n  //Setting the new income and budget data\r\n  const postData = () => {\r\n    Object.keys(money).forEach((e) => {\r\n      money[e] = parseInt(money[e]);\r\n    });\r\n    fetch(`http://localhost:5000/plan/2021/${month}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(money),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        if (responseData.success) {\r\n          successNotification(responseData.message);\r\n        } else {\r\n          errorNotification(responseData.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.planBody} ${disabled ? styles.disabled : \"\"}`}>\r\n      <h1>Planner</h1>\r\n      <form className={styles.planForm}>\r\n        <label>Income</label>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setMoney({ ...money, income: e.target.value })}\r\n          value={money.income}\r\n          disabled={edit ? false : true}\r\n          className={edit ? styles.activeInput : styles.inactiveInput}\r\n        />\r\n        <label>Budget:</label>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setMoney({ ...money, budget: e.target.value })}\r\n          value={money.budget}\r\n          disabled={edit ? false : true}\r\n          className={edit ? styles.activeInput : styles.inactiveInput}\r\n        />\r\n        <label>Balance</label>\r\n        <input\r\n          type=\"number\"\r\n          className={styles.inactiveInput}\r\n          value={balance}\r\n          disabled\r\n        />\r\n        <div className={styles.buttons}>\r\n          {edit ? (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (money.budget > money.income) {\r\n                  errorNotification(\r\n                    \"Your budget can't be higher than your income.\"\r\n                  );\r\n                  setEdit(true);\r\n                } else {\r\n                  postData();\r\n                  setEdit(false);\r\n                }\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => (disabled ? \"\" : setEdit(true))}\r\n              type=\"button\"\r\n            >\r\n              Edit\r\n            </button>\r\n          )}\r\n          {edit ? (\r\n            <button\r\n              className={styles.cancel}\r\n              onClick={() => {\r\n                setEdit(false);\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plan;\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Dashboard\\Dashboard.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Savings.js",["112","113","114","115","116","117"],"import React, { useEffect, useState } from \"react\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport styles from \"../Styles/Savings.module.css\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst Savings = () => {\r\n  const token = JSON.parse(localStorage.userDetails).token;\r\n  const thisMonth = new Date().getMonth() + 1;\r\n  let yearlySaved = 0;\r\n  let yearlyIncome = 0;\r\n\r\n  const [month, setMonth] = useState(thisMonth);\r\n  const [monthlySavings, setMonthlySavings] = useState(0);\r\n  const [monthlySavingsPercent, setMonthlySavingsPercent] = useState(0);\r\n  const [yearlySavings, setYearlySavings] = useState(yearlySaved);\r\n  const [yearlySavingsPercent, setYearlySavingsPercent] = useState(0);\r\n\r\n  //Monthly Savings\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/plan/2021/${month}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        setMonthlySavings(responseData.income - responseData.budget);\r\n        setMonthlySavingsPercent(\r\n          Math.round((monthlySavings / responseData.income) * 100) + \"%\"\r\n        );\r\n      });\r\n  }, [month, monthlySavings]);\r\n\r\n  //Yearly Savings\r\n  useEffect(() => {\r\n    for (let i = 1; i <= 12; i++) {\r\n      fetch(`http://localhost:5000/plan/2021/${i}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `bearer ${token}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          let savings = responseData.income - responseData.budget;\r\n          yearlyIncome += responseData.income;\r\n          yearlySaved += savings;\r\n          setYearlySavingsPercent(\r\n            Math.round((yearlySaved / yearlyIncome) * 100) + \"%\"\r\n          );\r\n          setYearlySavings(yearlySaved);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.savingsContainer}>\r\n      <h1>Savings</h1>\r\n      <div className={styles.boxesContainer}>\r\n        <div className={styles.innerBoxes}>\r\n          <div className={styles.bigBox}>\r\n            <p>This month you saved:</p>\r\n            <h1>\r\n              <CountUp end={monthlySavings} duration={1.5} />\r\n            </h1>\r\n          </div>\r\n          <div className={styles.smallBox}>\r\n            <p>Or {monthlySavingsPercent} of your monthly income</p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.innerBoxes}>\r\n          <div className={styles.bigBox}>\r\n            <p>In 2021 you saved:</p>\r\n            <h1>\r\n              <CountUp end={yearlySavings} duration={1.5} />\r\n            </h1>\r\n          </div>\r\n          <div className={styles.smallBox}>\r\n            <p>Or {yearlySavingsPercent} of your yearly income</p>\r\n          </div>\r\n          <p className={styles.joke}>\r\n            and enough to buy {yearlySavings / 5} duners\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Savings;\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Common\\Common.js",["118"],"import { NotificationManager } from \"react-notifications\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nexport const monthsOfYear = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport const monthsOfYearShort = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n\r\nexport const errorNotification = (errorMsg) =>\r\n  NotificationManager.error(errorMsg, \"Something went wrong\", 1000, () => {\r\n    alert(\"callback\");\r\n  });\r\n\r\nexport const successNotification = (successMsg) =>\r\n  NotificationManager.success(successMsg, \"Success!\", 1000, () => {\r\n    alert(\"callback\");\r\n  });\r\n\r\nexport const currentYear = new Date().getFullYear();\r\nexport const currentMonth = new Date().getMonth();\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\Logged.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\NotLogged.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Picker\\Picker.js",["119","120","121","122","123"],"import React, { useEffect, useMemo, useState } from \"react\";\r\nimport styles from \"../../Styles/Picker.module.css\";\r\nimport { monthsOfYear } from \"../../Common/Common\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Picker = ({ month, setOpen, open, year }) => {\r\n  const [yr, setYr] = useState(parseInt(year));\r\n  let monthName = monthsOfYear[month - 1];\r\n\r\n  return (\r\n    <div className={styles.picker}>\r\n      <div className={styles.heading}>\r\n        <h1 className={styles.monthName}>{monthName}</h1>\r\n        <h1 className={styles.monthName}>{year}</h1>\r\n        <p onClick={() => setOpen(!open)}>&#9660;</p>\r\n      </div>\r\n      <div className={`${styles.container} ${open ? styles.active : \"\"}`}>\r\n        <div className={styles.table}>\r\n          <div className={styles.year}>\r\n            <button\r\n              className={styles.arrowLeft}\r\n              onClick={() => {\r\n                yr > 2000 ? setYr(yr - 1) : setYr(yr);\r\n              }}\r\n            >\r\n              &lt;\r\n            </button>\r\n            <p>{yr}</p>\r\n            <button\r\n              className={styles.arrowLeft}\r\n              onClick={() => {\r\n                yr < 2021 ? setYr(yr + 1) : setYr(yr);\r\n              }}\r\n            >\r\n              &gt;\r\n            </button>\r\n          </div>\r\n          {monthsOfYear.map((m, i) => (\r\n            <Link\r\n              className={`${styles.month} ${\r\n                i === month - 1 ? styles.activeMonth : \"\"\r\n              }`}\r\n              to={\r\n                yr === 2021\r\n                  ? `/2021/monthly/${i + 1}`\r\n                  : `/${yr}/no-data/${i + 1}`\r\n              }\r\n              onClick={() => {\r\n                setOpen(!open);\r\n              }}\r\n            >\r\n              {m}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n","C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\UI\\Popup.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Navigation\\PopupLogout.js",[],"C:\\Projects\\budget_planner_project\\budget-planner\\src\\components\\Pages\\Monthly\\NoData.js",["124"],{"ruleId":"125","severity":1,"message":"126","line":8,"column":3,"nodeType":"127","messageId":"128","endLine":8,"endColumn":9},{"ruleId":"125","severity":1,"message":"129","line":9,"column":3,"nodeType":"127","messageId":"128","endLine":9,"endColumn":8},{"ruleId":"125","severity":1,"message":"130","line":10,"column":3,"nodeType":"127","messageId":"128","endLine":10,"endColumn":7},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":35,"column":6,"nodeType":"137","endLine":35,"endColumn":12,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":50,"column":35,"nodeType":"141","messageId":"142","endLine":50,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":83,"column":11,"nodeType":"145","messageId":"146","endLine":83,"endColumn":34},{"ruleId":"125","severity":1,"message":"147","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"147","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"147","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"148","line":4,"column":27,"nodeType":"127","messageId":"128","endLine":4,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":4,"column":35,"nodeType":"127","messageId":"128","endLine":4,"endColumn":41},{"ruleId":"125","severity":1,"message":"129","line":4,"column":43,"nodeType":"127","messageId":"128","endLine":4,"endColumn":48},{"ruleId":"135","severity":1,"message":"149","line":32,"column":6,"nodeType":"137","endLine":32,"endColumn":26,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"144","line":106,"column":15,"nodeType":"145","messageId":"146","endLine":106,"endColumn":28},{"ruleId":"125","severity":1,"message":"147","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"151","line":12,"column":17,"nodeType":"127","messageId":"128","endLine":12,"endColumn":25},{"ruleId":"135","severity":1,"message":"152","line":33,"column":6,"nodeType":"137","endLine":33,"endColumn":29,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":45,"column":15,"nodeType":"141","messageId":"156","endLine":54,"endColumn":10},{"ruleId":"135","severity":1,"message":"157","line":48,"column":27,"nodeType":"158","endLine":48,"endColumn":46},{"ruleId":"135","severity":1,"message":"159","line":49,"column":26,"nodeType":"127","endLine":49,"endColumn":33},{"ruleId":"125","severity":1,"message":"160","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":22},{"ruleId":"125","severity":1,"message":"161","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"162","line":1,"column":28,"nodeType":"127","messageId":"128","endLine":1,"endColumn":35},{"ruleId":"125","severity":1,"message":"148","line":4,"column":27,"nodeType":"127","messageId":"128","endLine":4,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":4,"column":35,"nodeType":"127","messageId":"128","endLine":4,"endColumn":41},{"ruleId":"125","severity":1,"message":"129","line":4,"column":43,"nodeType":"127","messageId":"128","endLine":4,"endColumn":48},{"ruleId":"125","severity":1,"message":"163","line":13,"column":10,"nodeType":"127","messageId":"128","endLine":13,"endColumn":14},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'total'. Either include it or remove the dependency array.","ArrayExpression",["166"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Navigation' is defined but never used.","'Router' is defined but never used.","React Hook useEffect has missing dependencies: 'setData' and 'year'. Either include them or remove the dependency array. If 'setData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"'setMonth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["168"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'yearlyIncome', 'yearlySaved', 'yearlySaved', 'yearlyIncome', 'yearlySaved'.","unsafeRefs","Assignments to the 'yearlyIncome' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'yearlySaved' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'confirmAlert' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'year' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [data.budget, total]",{"range":"175","text":"176"},"Update the dependencies array to be: [edit, token, month, year, setData]",{"range":"177","text":"178"},"Update the dependencies array to be: [month, monthlySavings, token]",{"range":"179","text":"180"},[1195,1201],"[data.budget, total]",[1100,1120],"[edit, token, month, year, setData]",[1193,1216],"[month, monthlySavings, token]"]